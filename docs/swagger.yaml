basePath: /
definitions:
  controllers.CreateTaskRequest:
    properties:
      description:
        type: string
      due_date:
        description: user passes string in YYYY-MM-DD
        type: string
      status:
        enum:
        - pending
        - in_progress
        - completed
        type: string
      title:
        maxLength: 100
        type: string
    required:
    - description
    - due_date
    - title
    type: object
  models.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      due_date:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Simple Todo API with Gin, GORM, MySQL, Swagger
  title: Todo API
  version: "1.0"
paths:
  /task:
    post:
      consumes:
      - application/json
      description: Add a new task to the todo list
      parameters:
      - description: Task input
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new task
      tags:
      - tasks
  /tasks:
    get:
      description: Retrieve all tasks with optional filters (status, due_date)
      parameters:
      - description: Filter by status (pending, in-progress, completed)
        in: query
        name: status
        type: string
      - description: Filter by due date (YYYY-MM-DD)
        in: query
        name: due_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
      summary: Get all tasks
      tags:
      - tasks
  /tasks/{id}:
    get:
      description: Retrieve a single task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a task by ID
      tags:
      - tasks
swagger: "2.0"
